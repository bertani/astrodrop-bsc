{"version":3,"sources":["webpack:///buffer (ignored)?3c37","./src/libs/ipfs-mini.js","buffer (ignored)","webpack:///buffer (ignored)?b966","./src/app/create/create.component.html","util (ignored)","webpack:///util (ignored)?8015","webpack:///util (ignored)?fc7e","./src/app/claim/claim.component.html","./src/app/claim/claim.component.ts","webpack:///util (ignored)?37bb","crypto (ignored)","webpack:///fs (ignored)?0216","./src/app/home/home.component.ts","./src/libs/ipfs-search-tree/ipfs-helper.ts","./src/environments/environment.ts","./src/app/profile/profile.component.html","./src/app/home/home.component.html","./src/app/constants.service.ts","./src/app/create/create.component.ts","./src/libs/merkle-tree/parse-balance-map.ts","./src/app/app.component.ts","./src/libs/merkle-tree/merkle-tree.ts","./src/app/web3Enabled.ts","./src/app/profile/profile.component.ts","./src/app/web3.ts","./src/app/app.module.ts","./src/app/header/header.component.html","./src/app/contract.service.ts","./src/assets/abis sync ^\\.\\/.*\\.json$","./src/app/header/header.component.ts","./src/app/wallet.service.ts","./src/libs/ipfs-search-tree/local-ipfs-search-tree.ts","./src/libs/merkle-tree/balance-tree.ts","./src/libs/ipfs-search-tree/remote-ipfs-search-tree.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,e;;;;;;;;;;;ACAA;AACA;AACA;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,EAKqB;AAC3B,CAAC;AACD,oCAAoC;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAAmD,cAAc;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA,8DAA8D,+DAA+D;;AAE7H;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C;;AAE3C;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,uIAAuI;AACvI;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kEAAkE;AAClE;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,sEAAsE;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;A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","file":"main.js","sourcesContent":["/* (ignored) */"," /* eslint-disable */ \n /* eslint-disable */ \n (function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"IPFS\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IPFS\"] = factory();\n\telse\n\t\troot[\"IPFS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nvar XMLHttpRequest = window.XMLHttpRequest; // eslint-disable-line\n\nmodule.exports = XMLHttpRequest;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar XMLHttpRequest = __webpack_require__(0);\n\nmodule.exports = IPFS;\n\n/**\n * The constructor object\n * @param {Object} `provider` the provider object\n * @return {Object} `ipfs` returns an IPFS instance\n * @throws if the `new` flag is not used\n */\nfunction IPFS(provider) {\n  if (!(this instanceof IPFS)) {\n    throw new Error('[ipfs-mini] IPFS instance must be instantiated with \"new\" flag (e.g. var ipfs = new IPFS(\"http://localhost:8545\");).');\n  }\n\n  var self = this;\n  self.setProvider(provider || {});\n}\n\n/**\n * Sets the provider of the IPFS instance\n * @param {Object} `provider` the provider object\n * @throws if the provider object is not an object\n */\nIPFS.prototype.setProvider = function setProvider(provider) {\n  if (typeof provider !== 'object') {\n    throw new Error('[ifpsjs] provider must be type Object, got \\'' + typeof provider + '\\'.');\n  }\n  var self = this;\n  var data = self.provider = Object.assign({\n    host: '127.0.0.1',\n    pinning: true,\n    port: '5001',\n    protocol: 'http',\n    base: '/api/v0' }, provider || {});\n  self.requestBase = String(data.protocol + '://' + data.host + data.base);\n};\n\n/**\n * Sends an async data packet to an IPFS node\n * @param {Object} `opts` the options object\n * @param {Function} `cb` the provider callback\n * @callback returns an error if any, or the data from IPFS\n */\nIPFS.prototype.sendAsync = function sendAsync(opts, cb) {\n  var self = this;\n  var request = new XMLHttpRequest(); // eslint-disable-line\n  var options = opts || {};\n  var callback = cb || function emptyCallback() {};\n\n  request.onreadystatechange = function () {\n    if (request.readyState === 4 && request.timeout !== 1) {\n      if (request.status !== 200) {\n        callback(new Error('[ipfs-mini] status ' + request.status + ': ' + request.responseText), null);\n      } else {\n        try {\n          callback(null, options.jsonParse ? JSON.parse(request.responseText) : request.responseText);\n        } catch (jsonError) {\n          callback(new Error('[ipfs-mini] while parsing data: \\'' + String(request.responseText) + '\\', error: ' + String(jsonError) + ' with provider: \\'' + self.requestBase + '\\'', null));\n        }\n      }\n    }\n  };\n\n  var pinningURI = self.provider.pinning && opts.uri === '/add' ? '?pin=true' : '';\n\n  if (options.payload) {\n    request.open('POST', '' + self.requestBase + opts.uri + pinningURI);\n  } else {\n    request.open('GET', '' + self.requestBase + opts.uri + pinningURI);\n  }\n\n  if (options.accept) {\n    request.setRequestHeader('accept', options.accept);\n  }\n\n  if (options.payload && options.boundary) {\n    request.setRequestHeader('Content-Type', 'multipart/form-data; boundary=' + options.boundary);\n    request.send(options.payload);\n  } else {\n    request.send();\n  }\n};\n\n/**\n * creates a boundary that isn't part of the payload\n */\nfunction createBoundary(data) {\n  while (true) {\n    var boundary = '----IPFSMini' + Math.random() * 100000 + '.' + Math.random() * 100000;\n    if (data.indexOf(boundary) === -1) {\n      return boundary;\n    }\n  }\n}\n\n/**\n * Add an string or buffer to IPFS\n * @param {String|Buffer} `input` a single string or buffer\n * @param {Function} `callback` a callback, with (error, ipfsHash String)\n * @callback {String} `ipfsHash` returns an IPFS hash string\n */\nIPFS.prototype.add = function addData(input, callback) {\n  var data = typeof input === 'object' && input.isBuffer ? input.toString('binary') : input;\n  var boundary = createBoundary(data);\n  var payload = '--' + boundary + '\\r\\nContent-Disposition: form-data; name=\"path\"\\r\\nContent-Type: application/octet-stream\\r\\n\\r\\n' + data + '\\r\\n--' + boundary + '--';\n\n  var addCallback = function addCallback(err, result) {\n    return callback(err, !err ? result.Hash : null);\n  };\n  this.sendAsync({\n    jsonParse: true,\n    accept: 'application/json',\n    uri: '/add',\n    payload: payload, boundary: boundary\n  }, addCallback);\n};\n\n/**\n * Add an JSON object to IPFS\n * @param {Object} `jsonData` a single JSON object\n * @param {Function} `callback` a callback, with (error, ipfsHash String)\n * @callback {String} `ipfsHash` returns an IPFS hash string\n */\nIPFS.prototype.addJSON = function addJson(jsonData, callback) {\n  var self = this;\n  self.add(JSON.stringify(jsonData), callback);\n};\n\n/**\n * Get an object stat `/object/stat` for an IPFS hash\n * @param {String} `ipfsHash` a single IPFS hash String\n * @param {Function} `callback` a callback, with (error, stats Object)\n * @callback {Object} `stats` returns the stats object for that IPFS hash\n */\nIPFS.prototype.stat = function cat(ipfsHash, callback) {\n  var self = this;\n  self.sendAsync({ jsonParse: true, uri: '/object/stat/' + ipfsHash }, callback);\n};\n\n/**\n * Get the data from an IPFS hash\n * @param {String} `ipfsHash` a single IPFS hash String\n * @param {Function} `callback` a callback, with (error, stats Object)\n * @callback {String} `data` returns the output data\n */\nIPFS.prototype.cat = function cat(ipfsHash, callback) {\n  var self = this;\n  self.sendAsync({ uri: '/cat/' + ipfsHash }, callback);\n};\n\n/**\n * Get the data from an IPFS hash that is a JSON object\n * @param {String} `ipfsHash` a single IPFS hash String\n * @param {Function} `callback` a callback, with (error, json Object)\n * @callback {Object} `data` returns the output data JSON object\n */\nIPFS.prototype.catJSON = function cat(ipfsHash, callback) {\n  var self = this;\n  self.cat(ipfsHash, function (jsonError, jsonResult) {\n    // eslint-disable-line\n    if (jsonError) {\n      return callback(jsonError, null);\n    }\n\n    try {\n      callback(null, JSON.parse(jsonResult));\n    } catch (jsonParseError) {\n      callback(jsonParseError, null);\n    }\n  });\n};\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=ipfs-mini.js.map","/* (ignored) */","/* (ignored) */","<h1>Create airdrop</h1>\n\n<ng-container *ngIf=\"step == 1\">\n  <h2>Step 1/5: Specify the token to be airdropped</h2>\n\n  <label for=\"tokenType\">Token type</label>\n  <select id=\"tokenType\" [(ngModel)]=\"tokenTypeInput\">\n    <option value=\"20\" selected>ERC-20</option>\n    <option value=\"721\">ERC-721</option>\n  </select>\n\n  <label for=\"tokenAddress\">Token address</label>\n  <input type=\"text\" id=\"tokenAddress\" [(ngModel)]=\"tokenAddressInput\">\n\n  <button (click)=\"clickConfirmToken()\">Confirm</button>\n</ng-container>\n\n<ng-container *ngIf=\"step == 2\">\n  <ng-container *ngIf=\"tokenTypeInput === '20'\">\n    <h2>Step 2/5: Enter recipient addresses and airdrop amounts</h2>\n\n    Format:\n    <pre>\n0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045,420.69\n0x46e01e73074937FEFb4104B5597Df32370172f86,1234.5678\n    </pre>\n\n    <p>\n      The airdrop amounts should be in decimal, and the number of decimals should not exceed the maximum supported by\n      the\n      airdropped token.\n    </p>\n  </ng-container>\n\n  <ng-container *ngIf=\"tokenTypeInput === '721'\">\n    <h2>Step 2/5: Enter recipient addresses and airdrop token IDs</h2>\n\n    Format:\n    <pre>\n0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045,2\n0x46e01e73074937FEFb4104B5597Df32370172f86,10\n    </pre>\n\n    <p>\n      Note: you can only airdrop a single NFT to each address.\n    </p>\n  </ng-container>\n\n  <textarea style=\"height: 10em;\" [(ngModel)]=\"balancesInput\"></textarea>\n\n  <button (click)=\"clickParseBalances()\">Parse data</button>\n\n  <pre *ngIf=\"canContinue\">\nSuccess!\nTotal airdrop amount: {{totalAirdropAmount}} {{tokenSymbol}}\nNumber of recipients: {{numRecipients}}\n  </pre>\n</ng-container>\n\n<ng-container *ngIf=\"step == 3\">\n  <h2>Step 3/5: Publish your Astrodrop page to IPFS</h2>\n\n  <label for=\"name\">Astrodrop title</label>\n  <input type=\"text\" id=\"name\" [(ngModel)]=\"nameInput\">\n\n  <label for=\"logoURL\">Logo URL</label>\n  <input type=\"text\" id=\"logoURL\" [(ngModel)]=\"logoURLInput\">\n\n  <label for=\"descriptionPreview\">Logo preview</label>\n  <img style=\"height: 128px;\" [src]=\"logoURLInput\" *ngIf=\"logoURLInput !== ''\">\n\n  <label for=\"description\">Description</label>\n  <textarea id=\"description\" style=\"height: 10em;\" [(ngModel)]=\"descriptionInput\"></textarea>\n\n  <label for=\"descriptionPreview\">Description preview</label>\n  <markdown id=\"descriptionPreview\" [data]=\"descriptionInput\" lineNumbers emoji katex></markdown>\n\n  <div>\n    <button (click)=\"clickUpload()\">Publish</button>\n  </div>\n\n  <p *ngIf=\"uploadingIPFSFiles\">Publishing... ({{uploadIPFSFilesPercentage * 100}}%)</p>\n\n  <p *ngIf=\"rootIPFSHash\">Success!</p>\n</ng-container>\n\n<ng-container *ngIf=\"step == 4\">\n  <h2>Step 4/5: Deploy airdrop smart contract</h2>\n\n  <label for=\"expirationDate\">Expiration time</label>\n  <input type=\"date\" id=\"expirationDate\" [(ngModel)]=\"expirationDateInput\">\n  <input type=\"time\" id=\"expirationTime\" [(ngModel)]=\"expirationTimeInput\">\n  <br>\n  <small>After the expiration time, you will be able to withdraw the unredeemed tokens.</small>\n\n  <div>\n    <button (click)=\"clickDeploy()\">Deploy</button>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"step == 5\">\n  <h2>Step 5/5: Last steps</h2>\n\n  <p>\n    Your Astrodrop contract is being deployed at <a target=\"_blank\"\n      href=\"https://etherscan.io/address/{{astrodropContractAddress}}\">{{astrodropContractAddress}}</a>.\n  </p>\n\n  <ng-container *ngIf=\"tokenTypeInput === '20'\">\n    <p>\n      Important note: You need to send the tokens to be airdropped ({{totalAirdropAmount}} {{tokenSymbol}}) to\n      your Astrodrop contract, so that the contract can distribute the tokens to the claimants.\n    </p>\n  </ng-container>\n\n  <ng-container *ngIf=\"tokenTypeInput === '721'\">\n    <p>\n      Important note: You need to give your Astrodrop contract approval to transfer your ERC-721 NFTs in order for the\n      airdrop to be functional.\n    </p>\n\n    <p>\n      <small>\n        If the NFTs are owned by a different account than the one you're using right now (e.g. a multi-signature\n        wallet), please call <code>setApprovalForAll(astrodropAddress)</code> on the NFT contract using that account.\n      </small>\n    </p>\n\n    <button (click)=\"clickSetApprovalForAll()\">Give approval</button>\n  </ng-container>\n\n  <p>\n    Your Astrodrop page is available <a routerLink=\"/claim/{{rootIPFSHash}}\" *ngIf=\"rootIPFSHash\">here</a>.\n  </p>\n</ng-container>\n\n<div *ngIf=\"canContinue\">\n  <button style=\"float: right; margin-bottom: 3em;\" (click)=\"clickNext()\">Next step</button>\n</div>","/* (ignored) */","/* (ignored) */","/* (ignored) */","<ng-container *ngIf=\"!finishedLoadingRoot\">\n  Loading...\n</ng-container>\n<ng-container *ngIf=\"finishedLoadingRoot\">\n  <img src={{remoteTree.metadata.logoURL}} style=\"height: 128px;\">\n\n  <h1 style=\"margin-top: 0%;\">{{remoteTree.metadata.name}}</h1>\n\n  <a target=\"_blank\" href=\"https://etherscan.io/address/{{remoteTree.metadata.contractAddress}}\"><small>View\n      smart contract on Etherscan</small></a>\n  <br>\n  <a target=\"_blank\" href=\"https://etherscan.io/address/{{remoteTree.metadata.tokenAddress}}\"><small>View\n      airdropped token on Etherscan</small></a>\n  <br>\n  <small>Expires at {{expirationTime}}</small>\n\n  <label for=\"claimAddressInput\">Claimant address</label>\n  <input id=\"claimAddressInput\" type=\"text\" (input)=\"claimAddress = $event.target.value\">\n  <button (click)=\"clickCheck()\">Check</button>\n\n  <ng-container *ngIf=\"finishedCheckingClaim && !claimed\">\n    <ng-container *ngIf=\"remoteTree.metadata.tokenType === '20'\">\n      <p>Claimable amount: {{claimableAmount}} {{claimTokenSymbol}}</p>\n    </ng-container>\n    <ng-container *ngIf=\"remoteTree.metadata.tokenType === '721'\">\n      <p>Claimable NFT ID: {{claimableAmount}} of {{claimTokenSymbol}}</p>\n    </ng-container>\n    <button (click)=\"clickClaim()\">Claim</button>\n  </ng-container>\n\n  <p *ngIf=\"finishedCheckingClaim && claimed\">\n    This address has already claimed from this airdrop.\n  </p>\n\n  <ng-container *ngIf=\"sweepEnabled\">\n    <p>\n      It appears that you are the owner of this airdrop, and the airdrop has expired. You can sweep the unclaimed tokens\n      into your wallet.\n    </p>\n    <button (click)=\"clickSweep()\">Sweep</button>\n  </ng-container>\n\n  <markdown [data]=\"remoteTree.metadata.description\" lineNumbers emoji katex></markdown>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { RemoteIPFSSearchTree } from '../../libs/ipfs-search-tree/remote-ipfs-search-tree';\nimport { ethers } from 'ethers';\nimport { ActivatedRoute } from '@angular/router';\nimport BigNumber from 'bignumber.js';\nimport { WalletService } from '../wallet.service';\nimport { ContractService } from '../contract.service';\n\n@Component({\n  selector: 'app-claim',\n  templateUrl: './claim.component.html',\n  styleUrls: ['./claim.component.css']\n})\nexport class ClaimComponent implements OnInit {\n  IPFS_ENDPOINT = 'ipfs.infura.io:5001';\n  rootIPFSHash: string;\n  remoteTree: RemoteIPFSSearchTree;\n  claimAddress: string;\n  userClaim: any;\n  airdropBalance: BigNumber;\n  claimableAmount: string;\n  claimTokenSymbol: string;\n  claimed: boolean;\n  finishedLoadingRoot: boolean;\n  finishedCheckingClaim: boolean;\n  expirationTime: string;\n  sweepEnabled: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    public wallet: WalletService,\n    public contracts: ContractService\n  ) { }\n\n  async ngOnInit() {\n    this.rootIPFSHash = this.activatedRoute.snapshot.paramMap.get('rootIPFSHash');\n    this.remoteTree = new RemoteIPFSSearchTree(this.IPFS_ENDPOINT, this.rootIPFSHash);\n    await this.remoteTree.init();\n\n    const readonlyWeb3 = this.wallet.readonlyWeb3();\n    const astrodropContract = this.contracts.getContract(this.remoteTree.metadata.contractAddress, 'Astrodrop', readonlyWeb3);\n    const expireTimestamp = (+await astrodropContract.methods.expireTimestamp().call()) * 1e3\n    this.expirationTime = new Date(expireTimestamp).toString();\n    this.finishedLoadingRoot = true;\n\n    const owner = await astrodropContract.methods.owner().call();\n    this.sweepEnabled = Date.now() >= expireTimestamp && this.wallet.userAddress.toLowerCase() === owner.toLowerCase();\n  }\n\n  resetData() {\n    this.claimed = false;\n    this.finishedCheckingClaim = false;\n    this.finishedLoadingRoot = false;\n  }\n\n  clickCheck() {\n    if (!this.wallet.web3.utils.isAddress(this.claimAddress)) {\n      this.wallet.displayGenericError(new Error('The provided address is not a valid Ethereum address.'));\n      return;\n    }\n\n    this.checkClaim(this.claimAddress);\n  }\n\n  clickClaim() {\n    this.claimAirdrop(this.claimAddress, this.userClaim);\n  }\n\n  clickSweep() {\n    this.sweep();\n  }\n\n  async getClaim(address: string) {\n    const checksumAddress = ethers.utils.getAddress(address);\n    const claim = await this.remoteTree.find(checksumAddress);\n    return claim;\n  }\n\n  async checkClaim(claimAddress: string) {\n    this.finishedCheckingClaim = false;\n\n    const readonlyWeb3 = this.wallet.readonlyWeb3();\n\n    this.userClaim = await this.getClaim(claimAddress);\n    if (!this.userClaim) {\n      this.wallet.displayGenericError(new Error('The provided address is not included in this airdrop.'));\n      return;\n    }\n\n    const astrodropContract = this.contracts.getContract(this.remoteTree.metadata.contractAddress, 'Astrodrop', readonlyWeb3);\n    this.claimed = await astrodropContract.methods.isClaimed(this.userClaim.index).call();\n\n    const tokenAddress = this.remoteTree.metadata.tokenAddress;\n    const tokenContract = this.contracts.getERC20(tokenAddress, readonlyWeb3);\n    this.claimTokenSymbol = await tokenContract.methods.symbol().call();\n\n    if (!this.claimed) {\n      let tokenDecimals;\n      if (this.remoteTree.metadata.tokenType === '20') {\n        tokenDecimals = +await tokenContract.methods.decimals().call();\n      } else if (this.remoteTree.metadata.tokenType === '721') {\n        tokenDecimals = 0;\n      }\n      const tokenPrecision = new BigNumber(10).pow(tokenDecimals);\n      this.airdropBalance = new BigNumber(this.userClaim.amount, 16).div(tokenPrecision);\n      this.claimableAmount = this.airdropBalance.toFixed(tokenDecimals);\n    }\n\n    this.finishedCheckingClaim = true;\n  }\n\n  claimAirdrop(claimAddress: string, claim: any) {\n    const astrodropContract = this.contracts.getContract(this.remoteTree.metadata.contractAddress, 'Astrodrop');\n    const func = astrodropContract.methods.claim(claim.index, claimAddress, claim.amount, claim.proof);\n\n    this.wallet.sendTx(func, () => { }, () => { }, (error) => { this.wallet.displayGenericError(error) });\n  }\n\n  sweep() {\n    const astrodropContract = this.contracts.getContract(this.remoteTree.metadata.contractAddress, 'Astrodrop');\n    const func = astrodropContract.methods.sweep(this.remoteTree.metadata.tokenAddress, this.wallet.userAddress);\n\n    this.wallet.sendTx(func, () => { }, () => { }, (error) => { this.wallet.displayGenericError(error) });\n  }\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import IPFS from '../ipfs-mini';\nimport Pinata from '@pinata/sdk';\n\nexport class IPFSHelper {\n  PINATA_KEY_PUBLIC = '2118d54c0ec9b0c87ac5';\n  PINATA_KEY_PRIVATE =\n    '57f1b50a1cfaa88d64cafbde53e2814c450d812895fc08bb8e35fee366f3814e';\n\n  pinata: any;\n  ipfs: any;\n\n  constructor(ipfsEndpoint: string) {\n    this.pinata = Pinata(this.PINATA_KEY_PUBLIC, this.PINATA_KEY_PRIVATE);\n    this.ipfs = new IPFS({\n      host: ipfsEndpoint,\n      protocol: 'https',\n      base: '/api/v0',\n    });\n  }\n\n  async getObjectFromIPFS(ipfsHash: string | null): Promise<any> {\n    if (ipfsHash === null) {\n      return null;\n    }\n    return new Promise((resolve, reject) => {\n      this.ipfs.catJSON(ipfsHash, (err, result) => {\n        if (err != null) {\n          reject(err);\n        } else {\n          resolve(result);\n        }\n      });\n    });\n  }\n\n  async uploadObjectToIPFS(value: any): Promise<string> {\n    const options = {\n      pinataOptions: {\n        cidVersion: 0,\n      },\n    };\n    const response = await this.pinata.pinJSONToIPFS(value, options);\n    return response.IpfsHash;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<h1>My profile</h1>\n\n<h2>Eligible Astrodrops</h2>\n\n<div class=\"grid-container\">\n  <div class=\"card-container\" *ngFor=\"let drop of eligibleAstrodrops\">\n    <img src={{drop.logoURL}} style=\"height: 128px;\">\n    <a routerLink=\"/claim/{{drop.ipfsHash}}\">{{drop.name}}</a>\n  </div>\n</div>\n\n<h2>My Astrodrops</h2>\n\n<div class=\"grid-container\">\n  <div class=\"card-container\" *ngFor=\"let drop of createdAstrodrops\">\n    <img src={{drop.logoURL}} style=\"height: 128px;\">\n    <a routerLink=\"/claim/{{drop.ipfsHash}}\">{{drop.name}}</a>\n  </div>\n</div>","<h2>Token airdrops for 212.5k gas</h2>\n\n<p>\n  Astrodrop uses Merkle trees to enable airdropping tokens to any number of accounts for the same cost: 212.5k gas.\n</p>\n\n<p>\n  Astrodrop also allows users to view the list of astrodrops they are eligible for, so that\n  you'll never miss a high-value airdrop again.\n</p>\n\n<p>\n  Each astrodrop also comes with a customizable claim page, where users can claim their airdropped tokens and read more\n  about the airdrop.\n</p>\n\n<button class=\"glow-on-hover centered\" routerLink=\"create\">\n  GET STARTED\n</button>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConstantsService {\n  PRECISION = 1e18;\n  GRAPHQL_ENDPOINT = 'https://api.thegraph.com/subgraphs/name/whalerdao/astrodrop';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { parseBalanceMap } from '../../libs/merkle-tree/parse-balance-map';\nimport { LocalIPFSSearchTree } from '../../libs/ipfs-search-tree/local-ipfs-search-tree';\nimport { WalletService } from '../wallet.service';\nimport { ContractService } from '../contract.service';\nimport { BigNumber } from 'bignumber.js';\nimport Base58 from 'base-58';\nimport { Metadata } from 'src/libs/ipfs-search-tree/interfaces';\nimport Papa from 'papaparse';\n\ntype BalanceFormat = { [account: string]: number | string }\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n  IPFS_ENDPOINT = 'api.thegraph.com/ipfs';\n\n  step: number;\n\n  balancesInput: string;\n  tokenTypeInput: string;\n  tokenAddressInput: string;\n  nameInput: string;\n  descriptionInput: string;\n  logoURLInput: string;\n  expirationDateInput: string;\n  expirationTimeInput: string;\n\n  rootIPFSHash: string;\n  merkleTree: any;\n  astrodropContractAddress: string;\n  tokenDecimals: number;\n  totalAirdropAmount: string;\n  tokenSymbol: string;\n  numRecipients: number;\n  salt: string;\n  canContinue: boolean;\n\n  uploadingIPFSFiles: boolean;\n  uploadIPFSFilesPercentage: number;\n\n  constructor(\n    public wallet: WalletService,\n    public contracts: ContractService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.balancesInput = '';\n    this.tokenTypeInput = '20';\n    this.tokenAddressInput = '';\n    this.nameInput = '';\n    this.descriptionInput = '';\n    this.logoURLInput = '';\n    this.expirationDateInput = '';\n    this.expirationTimeInput = '';\n    this.step = 1;\n    this.canContinue = false;\n    this.numRecipients = 0;\n    this.uploadingIPFSFiles = false;\n    this.uploadIPFSFilesPercentage = 0;\n  }\n\n  clickNext() {\n    this.step += 1;\n    this.canContinue = false;\n  }\n\n  async clickConfirmToken() {\n    // check inputs\n    if (!this.wallet.web3.utils.isAddress(this.tokenAddressInput)) {\n      this.wallet.displayGenericError(new Error('Input not an Ethereum address'));\n      return;\n    }\n\n    const tokenContract = this.contracts.getERC20(this.tokenAddressInput, this.wallet.readonlyWeb3());\n    if (this.tokenTypeInput === '20') {\n      await Promise.all([\n        tokenContract.methods.decimals().call().then(decimals => this.tokenDecimals = +decimals),\n        tokenContract.methods.symbol().call().then(symbol => this.tokenSymbol = symbol)\n      ]);\n    } else if (this.tokenTypeInput === '721') {\n      await tokenContract.methods.symbol().call().then(symbol => this.tokenSymbol = symbol);\n      this.tokenDecimals = 0;\n    }\n\n    this.step += 1;\n  }\n\n  async clickParseBalances() {\n    try {\n      this.parseBalances(this.balancesInput);\n      this.numRecipients = Object.keys(this.merkleTree.claims).length;\n      if (this.tokenTypeInput === '20') {\n        this.totalAirdropAmount = new BigNumber(this.merkleTree.tokenTotal, 16).div(new BigNumber(10).pow(this.tokenDecimals)).toFixed(this.tokenDecimals);\n      } else if (this.tokenTypeInput === '721') {\n        this.totalAirdropAmount = new BigNumber(this.numRecipients).toFixed();\n      }\n      const unixTimestamp = Date.now();\n      this.salt = '0x' + new BigNumber(this.merkleTree.merkleRoot, 16).plus(unixTimestamp).toString(16);\n      this.astrodropContractAddress = await this.computeAstrodropAddress(this.salt);\n      this.canContinue = true;\n    } catch (error) {\n      this.wallet.displayGenericError(error);\n    }\n  }\n\n  async clickDeploy() {\n    const expirationTimestamp = Math.floor(Date.parse(`${this.expirationDateInput} ${this.expirationTimeInput}`) / 1e3);\n    this.deployAstrodropContract(this.tokenAddressInput, this.merkleTree.merkleRoot, expirationTimestamp, this.salt, this.rootIPFSHash);\n  }\n\n  async clickUpload() {\n    const metadata: Metadata = {\n      name: this.nameInput,\n      description: this.descriptionInput,\n      logoURL: this.logoURLInput,\n      contractAddress: this.astrodropContractAddress,\n      merkleRoot: this.merkleTree.merkleRoot,\n      tokenAddress: this.tokenAddressInput,\n      tokenTotal: this.merkleTree.tokenTotal,\n      tokenType: this.tokenTypeInput\n    };\n    this.uploadingIPFSFiles = true;\n    const updateProgress = (percentageChange) => {\n      this.uploadIPFSFilesPercentage += percentageChange;\n    }\n    await this.uploadTree(this.merkleTree, metadata, updateProgress);\n    this.canContinue = true;\n    this.uploadingIPFSFiles = false;\n  }\n\n  clickSetApprovalForAll() {\n    this.setApprovalForAll(this.tokenAddressInput, this.astrodropContractAddress);\n  }\n\n  private parseBalances(rawBalances: string) {\n    // parse CSV balances to JSON\n    const parseResults = Papa.parse(rawBalances);\n    const balances: BalanceFormat = {};\n    if (parseResults.errors.length > 0) {\n      throw parseResults.errors[0];\n    }\n    for (const row of parseResults.data) {\n      if (row.length != 2) {\n        throw new Error(`Invalid row: ${row}`);\n      }\n      const claimant = row[0];\n      const balance = row[1];\n      balances[claimant] = new BigNumber(balance).times(new BigNumber(10).pow(this.tokenDecimals)).integerValue().toString(16);\n    }\n\n    // create merkle tree\n    this.merkleTree = parseBalanceMap(balances);\n  }\n\n  private async uploadTree(merkleTree: any, metadata: any, updateProgress: any) {\n    // create search tree\n    const searchTree = new LocalIPFSSearchTree(this.IPFS_ENDPOINT, merkleTree.claims, metadata, updateProgress);\n\n    // upload search tree to IPFS\n    this.rootIPFSHash = await searchTree.uploadData();\n  }\n\n  private computeAstrodropAddress(salt: string): Promise<string> {\n    const astrodropFactoryContract = this.contracts.getNamedContract('AstrodropFactory');\n    let astrodropTemplateAddress;\n    if (this.tokenTypeInput === '20') {\n      astrodropTemplateAddress = this.contracts.getNamedContractAddress('Astrodrop');\n    } else if (this.tokenTypeInput === '721') {\n      astrodropTemplateAddress = this.contracts.getNamedContractAddress('AstrodropERC721');\n    }\n    return astrodropFactoryContract.methods.computeAstrodropAddress(astrodropTemplateAddress, salt).call();\n  }\n\n  private deployAstrodropContract(tokenAddress: string, merkleRoot: string, expireTimestamp: number, salt: string, ipfsHash: string) {\n    // convert ipfsHash to 32 bytes by removing the first two bytes\n    const truncatedIPFSHash = this.wallet.web3.utils.bytesToHex(Base58.decode(ipfsHash).slice(2));\n\n    const astrodropFactoryContract = this.contracts.getNamedContract('AstrodropFactory');\n    let astrodropTemplateAddress;\n    if (this.tokenTypeInput === '20') {\n      astrodropTemplateAddress = this.contracts.getNamedContractAddress('Astrodrop');\n    } else if (this.tokenTypeInput === '721') {\n      astrodropTemplateAddress = this.contracts.getNamedContractAddress('AstrodropERC721');\n    }\n    const func = astrodropFactoryContract.methods.createAstrodrop(\n      astrodropTemplateAddress,\n      tokenAddress,\n      merkleRoot,\n      expireTimestamp,\n      salt,\n      truncatedIPFSHash\n    );\n    return this.wallet.sendTx(func, () => { this.canContinue = true; }, () => { }, (error) => { this.wallet.displayGenericError(error) });\n  }\n\n  setApprovalForAll(tokenAddress: string, astrodropAddress: string) {\n    const tokenContract = this.contracts.getContract(tokenAddress, 'ERC721');\n    const func = tokenContract.methods.setApprovalForAll(astrodropAddress, true);\n\n    return this.wallet.sendTx(func, () => { }, () => { }, (error) => { this.wallet.displayGenericError(error) });\n  }\n}\n","import { BigNumber, utils } from 'ethers'\nimport BalanceTree from './balance-tree'\n\nconst { isAddress, getAddress } = utils\n\n// This is the blob that gets distributed and pinned to IPFS.\n// It is completely sufficient for recreating the entire merkle tree.\n// Anyone can verify that all air drops are included in the tree,\n// and the tree has no additional distributions.\ninterface MerkleDistributorInfo {\n  merkleRoot: string\n  tokenTotal: string\n  claims: {\n    [account: string]: {\n      index: number\n      amount: string\n      proof: string[]\n      flags?: {\n        [flag: string]: boolean\n      }\n    }\n  }\n}\n\ntype OldFormat = { [account: string]: number | string }\ntype NewFormat = { address: string; earnings: string; reasons: string }\n\nexport function parseBalanceMap(balances: OldFormat | NewFormat[]): MerkleDistributorInfo {\n  // if balances are in an old format, process them\n  const balancesInNewFormat: NewFormat[] = Array.isArray(balances)\n    ? balances\n    : Object.keys(balances).map(\n        (account): NewFormat => ({\n          address: account,\n          earnings: `0x${balances[account].toString(16)}`,\n          reasons: '',\n        })\n      )\n\n  const dataByAddress = balancesInNewFormat.reduce<{\n    [address: string]: { amount: BigNumber; flags?: { [flag: string]: boolean } }\n  }>((memo, { address: account, earnings, reasons }) => {\n    if (!isAddress(account)) {\n      throw new Error(`Found invalid address: ${account}`)\n    }\n    const parsed = getAddress(account)\n    if (memo[parsed]) throw new Error(`Duplicate address: ${parsed}`)\n    const parsedNum = BigNumber.from(earnings)\n    if (parsedNum.lt(0)) throw new Error(`Invalid amount for account: ${account}`)\n\n    const flags = {\n      isSOCKS: reasons.includes('socks'),\n      isLP: reasons.includes('lp'),\n      isUser: reasons.includes('user'),\n    }\n\n    memo[parsed] = { amount: parsedNum, ...(reasons === '' ? {} : { flags }) }\n    return memo\n  }, {})\n\n  const sortedAddresses = Object.keys(dataByAddress).sort()\n\n  // construct a tree\n  const tree = new BalanceTree(\n    sortedAddresses.map((address) => ({ account: address, amount: dataByAddress[address].amount }))\n  )\n\n  // generate claims\n  const claims = sortedAddresses.reduce<{\n    [address: string]: { amount: string; index: number; proof: string[]; flags?: { [flag: string]: boolean } }\n  }>((memo, address, index) => {\n    const { amount, flags } = dataByAddress[address]\n    memo[address] = {\n      index,\n      amount: amount.toHexString(),\n      proof: tree.getProof(index, address, amount),\n      ...(flags ? { flags } : {}),\n    }\n    return memo\n  }, {})\n\n  const tokenTotal: BigNumber = sortedAddresses.reduce<BigNumber>(\n    (memo, key) => memo.add(dataByAddress[key].amount),\n    BigNumber.from(0)\n  )\n\n  return {\n    merkleRoot: tree.getHexRoot(),\n    tokenTotal: tokenTotal.toHexString(),\n    claims,\n  }\n}","import { Component } from '@angular/core';\nimport { WalletService } from './wallet.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'merkle-drop';\n\n  constructor(public wallet: WalletService) {\n    wallet.connect(() => {}, () => {}, true);\n  }\n}\n","import { bufferToHex, keccak256 } from 'ethereumjs-util'\n\nexport default class MerkleTree {\n  private readonly elements: Buffer[]\n  private readonly bufferElementPositionIndex: { [hexElement: string]: number }\n  private readonly layers: Buffer[][]\n\n  constructor(elements: Buffer[]) {\n    this.elements = [...elements]\n    // Sort elements\n    this.elements.sort(Buffer.compare)\n    // Deduplicate elements\n    this.elements = MerkleTree.bufDedup(this.elements)\n\n    this.bufferElementPositionIndex = this.elements.reduce<{ [hexElement: string]: number }>((memo, el, index) => {\n      memo[bufferToHex(el)] = index\n      return memo\n    }, {})\n\n    // Create layers\n    this.layers = this.getLayers(this.elements)\n  }\n\n  getLayers(elements: Buffer[]): Buffer[][] {\n    if (elements.length === 0) {\n      throw new Error('empty tree')\n    }\n\n    const layers = []\n    layers.push(elements)\n\n    // Get next layer until we reach the root\n    while (layers[layers.length - 1].length > 1) {\n      layers.push(this.getNextLayer(layers[layers.length - 1]))\n    }\n\n    return layers\n  }\n\n  getNextLayer(elements: Buffer[]): Buffer[] {\n    return elements.reduce<Buffer[]>((layer, el, idx, arr) => {\n      if (idx % 2 === 0) {\n        // Hash the current element with its pair element\n        layer.push(MerkleTree.combinedHash(el, arr[idx + 1]))\n      }\n\n      return layer\n    }, [])\n  }\n\n  static combinedHash(first: Buffer, second: Buffer): Buffer {\n    if (!first) {\n      return second\n    }\n    if (!second) {\n      return first\n    }\n\n    return keccak256(MerkleTree.sortAndConcat(first, second))\n  }\n\n  getRoot(): Buffer {\n    return this.layers[this.layers.length - 1][0]\n  }\n\n  getHexRoot(): string {\n    return bufferToHex(this.getRoot())\n  }\n\n  getProof(el: Buffer) {\n    let idx = this.bufferElementPositionIndex[bufferToHex(el)]\n\n    if (typeof idx !== 'number') {\n      throw new Error('Element does not exist in Merkle tree')\n    }\n\n    return this.layers.reduce((proof, layer) => {\n      const pairElement = MerkleTree.getPairElement(idx, layer)\n\n      if (pairElement) {\n        proof.push(pairElement)\n      }\n\n      idx = Math.floor(idx / 2)\n\n      return proof\n    }, [])\n  }\n\n  getHexProof(el: Buffer): string[] {\n    const proof = this.getProof(el)\n\n    return MerkleTree.bufArrToHexArr(proof)\n  }\n\n  private static getPairElement(idx: number, layer: Buffer[]): Buffer | null {\n    const pairIdx = idx % 2 === 0 ? idx + 1 : idx - 1\n\n    if (pairIdx < layer.length) {\n      return layer[pairIdx]\n    } else {\n      return null\n    }\n  }\n\n  private static bufDedup(elements: Buffer[]): Buffer[] {\n    return elements.filter((el, idx) => {\n      return idx === 0 || !elements[idx - 1].equals(el)\n    })\n  }\n\n  private static bufArrToHexArr(arr: Buffer[]): string[] {\n    if (arr.some((el) => !Buffer.isBuffer(el))) {\n      throw new Error('Array is not an array of buffers')\n    }\n\n    return arr.map((el) => '0x' + el.toString('hex'))\n  }\n\n  private static sortAndConcat(...args: Buffer[]): Buffer {\n    return Buffer.concat([...args].sort(Buffer.compare))\n  }\n}","import Web3 from 'web3';\nimport Notify from 'bnc-notify';\nimport Onboard from 'bnc-onboard';\nimport BigNumber from 'bignumber.js';\n\nexport class Web3Enabled {\n  blocknativeAPIKey: string;\n  infuraKey: string;\n  infuraEndpoint: string;\n  assistInstance: any;\n  notifyInstance: any;\n  state: any;\n  networkID: number;\n\n  constructor(public web3: Web3) {\n    this.blocknativeAPIKey = '08eaf62d-228c-4ec6-a033-f8b97689102b';\n    this.infuraKey = '2f4ac5ce683c4da09f88b2b564d44199';\n    this.infuraEndpoint = `https://damp-aged-sun.bsc.quiknode.pro/2a22259a76247057371cc7894d325194cb52f4ee/`\n    this.networkID = 56;\n    this.state = {\n      address: null,\n      wallet: {\n        provider: null\n      }\n    };\n  }\n\n  async connect(onConnected, onError, isStartupMode: boolean) {\n    if (!this.assistInstance) {\n      const wallets = [\n        {\n          walletName: 'metamask',\n          preferred: true\n        },\n        {\n          walletName: 'walletConnect',\n          infuraKey: this.infuraKey,\n          networkId: this.networkID,\n          preferred: true\n        }\n      ];\n\n      const walletChecks = [\n        { checkName: 'derivationPath' },\n        { checkName: 'connect' },\n        { checkName: 'accounts' },\n        { checkName: 'network' },\n      ];\n\n      const walletSelectConfig = {\n        heading: 'Select a Wallet',\n        description: 'Please select a wallet to connect to Astrodrop:',\n        wallets\n      };\n\n      const bncAssistConfig = {\n        dappId: this.blocknativeAPIKey,\n        darkMode: true,\n        networkId: this.networkID,\n        hideBranding: true,\n        subscriptions: {\n          wallet: wallet => {\n            if (wallet.provider) {\n              this.web3 = new Web3(wallet.provider);\n            }\n            // store the selected wallet name to be retrieved next time the app loads\n            window.localStorage.setItem('selectedWallet', wallet.name);\n          },\n          address: this.doNothing,\n          network: this.doNothing,\n          balance: this.doNothing\n        },\n        walletSelect: walletSelectConfig,\n        walletCheck: walletChecks\n      };\n      this.assistInstance = Onboard(bncAssistConfig);\n    }\n\n    // Get user to select a wallet\n    let selectedWallet;\n    if (isStartupMode) {\n      // Startup mode: connect to previously used wallet if available\n      // get the selectedWallet value from local storage\n      const previouslySelectedWallet = window.localStorage.getItem('selectedWallet');\n      // call wallet select with that value if it exists\n      if (previouslySelectedWallet != null) {\n        selectedWallet = await this.assistInstance.walletSelect(previouslySelectedWallet);\n      }\n    } else {\n      // Non startup mode: open wallet selection screen\n      selectedWallet = await this.assistInstance.walletSelect();\n    }\n    const state = this.assistInstance.getState();\n    if (\n      selectedWallet\n      || state.address !== null // If user already logged in but want to switch account, and then dismissed window\n    ) {\n      // Get users' wallet ready to transact\n      const ready = await this.assistInstance.walletCheck();\n      this.state = this.assistInstance.getState();\n\n      if (!ready) {\n        // Selected an option but then dismissed it\n        // Treat as no wallet\n        onError();\n      } else {\n        // Successfully connected\n        onConnected();\n      }\n    } else {\n      // User refuses to connect to wallet\n      // Update state\n      this.state = this.assistInstance.getState();\n      onError();\n    }\n\n    if (!this.notifyInstance) {\n      this.notifyInstance = Notify({\n        dappId: this.blocknativeAPIKey,\n        networkId: this.networkID\n      });\n      this.notifyInstance.config({\n        darkMode: true\n      });\n    }\n  }\n\n  readonlyWeb3() {\n    if (this.state.wallet.provider) {\n      return this.web3;\n    }\n    return new Web3(this.infuraEndpoint);\n  }\n\n  async estimateGas(func, val, _onError) {\n    return Math.floor((await func.estimateGas({\n      from: this.state.address,\n      value: val\n    }).catch(_onError)) * 1.2);\n  }\n\n  async sendTx(func, _onTxHash, _onReceipt, _onError) {\n    const gasLimit = await this.estimateGas(func, 0, _onError);\n    if (!isNaN(gasLimit)) {\n      return func.send({\n        from: this.state.address,\n        gas: gasLimit,\n      }).on('transactionHash', (hash) => {\n        _onTxHash(hash);\n        const { emitter } = this.notifyInstance.hash(hash);\n        // emitter.on('txConfirmed', _onReceipt);\n        emitter.on('txFailed', _onError);\n      })\n        .on('receipt', _onReceipt)\n        .on('error', (e) => {\n          if (!e.toString().contains('newBlockHeaders')) {\n            _onError(e);\n          }\n        });\n    }\n  }\n\n  async sendTxWithValue(func, val, _onTxHash, _onReceipt, _onError) {\n    const gasLimit = await this.estimateGas(func, val, _onError);\n    if (!isNaN(gasLimit)) {\n      return func.send({\n        from: this.state.address,\n        gas: gasLimit,\n        value: val\n      }).on('transactionHash', (hash) => {\n        _onTxHash(hash);\n        const { emitter } = this.notifyInstance.hash(hash);\n        // emitter.on('txConfirmed', _onReceipt);\n        emitter.on('txFailed', _onError);\n      })\n        .on('receipt', _onReceipt)\n        .on('error', (e) => {\n          if (!e.toString().contains('newBlockHeaders')) {\n            _onError(e);\n          }\n        });\n    }\n  }\n\n  async sendTxWithToken(func, token, to, amount, _onTxHash, _onReceipt, _onError) {\n    const maxAllowance = new BigNumber(2).pow(256).minus(1).integerValue().toFixed();\n    const allowance = new BigNumber(await token.methods.allowance(this.state.address, to).call());\n    if (allowance.gte(amount)) {\n      return this.sendTx(func, _onTxHash, _onReceipt, _onError);\n    }\n    return this.sendTx(token.methods.approve(to, maxAllowance), this.doNothing, () => {\n      this.sendTx(func, _onTxHash, _onReceipt, _onError);\n    }, _onError);\n  }\n\n  displayGenericError(error: Error) {\n    let errorMessage;\n    try {\n      errorMessage = JSON.parse(error.message.slice(error.message.indexOf('{'))).originalError.message;\n    } catch (err) {\n      errorMessage = error.message;\n    }\n    this.notifyInstance.notification({\n      eventCode: 'genericError',\n      type: 'error',\n      message: errorMessage\n    });\n  }\n\n  doNothing() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport BigNumber from 'bignumber.js';\nimport { request, gql } from 'graphql-request'\nimport { ConstantsService } from '../constants.service';\nimport { ContractService } from '../contract.service';\nimport { WalletService } from '../wallet.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  userAddress: string;\n  eligibleAstrodrops: Astrodrop[];\n  createdAstrodrops: Astrodrop[];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    public wallet: WalletService,\n    public constants: ConstantsService,\n    public contracts: ContractService\n  ) {\n    this.eligibleAstrodrops = [];\n    this.createdAstrodrops = [];\n  }\n\n  ngOnInit(): void {\n    this.userAddress = this.activatedRoute.snapshot.paramMap.get('userAddress');\n    this.loadData();\n  }\n\n  loadData() {\n    const claimantID = this.wallet.web3.utils.toChecksumAddress(this.userAddress);\n    const creatorID = this.userAddress.toLowerCase();\n    const queryString = gql`\n      {\n        claimant(id: \"${claimantID}\") {\n          eligibleAstrodrops {\n            astrodrop {\n              id\n              name\n              logoURL\n              ipfsHash\n            }\n          }\n        }\n        astrodrops(where: { creator: \"${creatorID}\" }) {\n          id\n          name\n          logoURL\n          ipfsHash\n        }\n      }\n    `;\n    request(this.constants.GRAPHQL_ENDPOINT, queryString).then((data) => this.handleData(data));\n  }\n\n  async handleData(queryResult: QueryResult) {\n    const claimant = queryResult.claimant;\n    const createdAstrodrops = queryResult.astrodrops;\n\n    if (claimant) {\n      const rawDrops = claimant.eligibleAstrodrops;\n      const parsedDrops: Astrodrop[] = [];\n      for (const rawDrop of rawDrops) {\n        parsedDrops.push({\n          name: rawDrop.astrodrop.name,\n          logoURL: rawDrop.astrodrop.logoURL,\n          ipfsHash: rawDrop.astrodrop.ipfsHash\n        });\n      }\n      this.eligibleAstrodrops = parsedDrops;\n    }\n\n    if (createdAstrodrops) {\n      const rawDrops = createdAstrodrops;\n      const parsedDrops: Astrodrop[] = [];\n      for (const rawDrop of rawDrops) {\n        parsedDrops.push({\n          name: rawDrop.name,\n          logoURL: rawDrop.logoURL,\n          ipfsHash: rawDrop.ipfsHash\n        });\n      }\n      this.createdAstrodrops = parsedDrops;\n    }\n  }\n}\n\ninterface QueryResult {\n  claimant: {\n    eligibleAstrodrops: {\n      astrodrop: {\n        id: string\n        name: string | null\n        logoURL: string | null\n        ipfsHash: string\n      }\n    }[];\n  };\n  astrodrops: {\n    id: string\n    name: string | null\n    logoURL: string | null\n    ipfsHash: string\n  }[];\n}\n\ninterface Astrodrop {\n  name: string;\n  logoURL: string;\n  ipfsHash: string;\n}","import { InjectionToken } from '@angular/core';\nimport Web3 from 'web3';\n\nexport const WEB3 = new InjectionToken<Web3>('web3', {\n  providedIn: 'root',\n  factory: () => {\n    try {\n      const provider = ('ethereum' in window) ? window['ethereum'] : Web3.givenProvider;\n      return new Web3(provider);\n    } catch (err) {\n      throw new Error('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n});\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MarkdownModule } from 'ngx-markdown';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateComponent } from './create/create.component';\nimport { ClaimComponent } from './claim/claim.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateComponent,\n    ClaimComponent,\n    HomeComponent,\n    HeaderComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    MarkdownModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div style=\"display: flex; justify-content: space-between;\">\n  <a routerLink=\"\">\n    <h1 style=\"\">Astrodrop</h1>\n  </a>\n\n  <div style=\"margin-top: 40px;\">\n    <a style=\"margin-right: 10px;\" routerLink=\"/profile/{{wallet.userAddress}}\" *ngIf=\"wallet.connected\">\n      My profile\n    </a>\n    <button (click)=\"connectWallet()\">\n      <div *ngIf=\"wallet.connected\">\n        {{wallet.userAddress.substring(0, 14)}}\n      </div>\n      <div *ngIf=\"!wallet.connected\">\n        Connect Wallet\n      </div>\n    </button>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport Web3 from 'web3';\nimport { WalletService } from './wallet.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContractService {\n\n  constructor(public wallet: WalletService) { }\n\n  getContract(address: string, abiName: string, web3?: Web3) {\n    const abi = require(`../assets/abis/${abiName}.json`);\n    if (web3) {\n      return new web3.eth.Contract(abi, address);\n    }\n    return new this.wallet.web3.eth.Contract(abi, address);\n  }\n\n  getNamedContract(name: string, web3?: Web3) {\n    const address = require('../assets/json/contracts.json')[name];\n    return this.getContract(address, name, web3);\n  }\n\n  getNamedContractAddress(name: string) {\n    return require('../assets/json/contracts.json')[name];\n  }\n\n  getERC20(address: string, web3?: Web3) {\n    return this.getContract(address, 'ERC20', web3);\n  }\n}","var map = {\n\t\"./Astrodrop.json\": \"TXO2\",\n\t\"./AstrodropFactory.json\": \"SLlR\",\n\t\"./ERC20.json\": \"hDY1\",\n\t\"./ERC721.json\": \"P3NI\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"c+P/\";","import { Component, OnInit } from '@angular/core';\nimport { WalletService } from '../wallet.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public wallet: WalletService) { }\n\n  ngOnInit(): void {\n  }\n\n  connectWallet() {\n    this.wallet.connect(() => { }, () => { }, false);\n  }\n}\n","import { Injectable, Inject, EventEmitter } from '@angular/core';\nimport { Web3Enabled } from './web3Enabled';\nimport Web3 from 'web3';\nimport { WEB3 } from './web3';\nimport { isNullOrUndefined } from 'util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WalletService extends Web3Enabled {\n  connectedEvent: EventEmitter<null>;\n  disconnectedEvent: EventEmitter<null>;\n\n  constructor(@Inject(WEB3) public web3: Web3) {\n    super(web3);\n    this.connectedEvent = new EventEmitter<null>();\n    this.disconnectedEvent = new EventEmitter<null>();\n  }\n\n  public get userAddress(): string {\n    return this.state.address;\n  }\n\n  public get connected(): boolean {\n    return !isNullOrUndefined(this.state.address);\n  }\n\n  async connect(onConnected, onError, isStartupMode: boolean) {\n    const _onConnected = () => {\n      this.connectedEvent.emit();\n      onConnected();\n    };\n    const _onError = () => {\n      this.disconnectedEvent.emit();\n      onError();\n    }\n    await super.connect(_onConnected, _onError, isStartupMode);\n  }\n}\n","import { IPFSRoot, Metadata } from './interfaces';\nimport BigNumber from 'bignumber.js';\nimport { IPFSHelper } from './ipfs-helper';\n\n// Used for creating & uploading a tree\nexport class LocalIPFSSearchTree {\n  ipfsHelper: IPFSHelper;\n  keyValueMap: any; // maps string to object\n  metadata: Metadata;\n  updateProgress: any; // callback for updating progress bar\n  binSize: number;\n  uploadDelayMs: number; // the delay between bin IPFS uploads in ms\n\n  constructor(\n    ipfsEndpoint: string,\n    data: any,\n    metadata: Metadata,\n    updateProgress: any,\n    binSize: number = 500,\n    uploadDelayMs: number = 100\n  ) {\n    this.ipfsHelper = new IPFSHelper(ipfsEndpoint);\n    this.keyValueMap = data;\n    this.metadata = metadata;\n    this.updateProgress = updateProgress;\n    this.binSize = binSize;\n    this.uploadDelayMs = uploadDelayMs;\n  }\n\n  async uploadData(): Promise<string> {\n    // sort data keys\n    const sortedKeys = Object.keys(this.keyValueMap).sort((a, b) => {\n      const aNum = new BigNumber(a.substr(2).toLowerCase(), 16);\n      const bNum = new BigNumber(b.substr(2).toLowerCase(), 16);\n      if (aNum.eq(bNum)) {\n        return 0;\n      }\n      return aNum.lt(bNum) ? -1 : 1;\n    });\n    const N = sortedKeys.length;\n\n    // divide data using pivots\n    const pivots = [];\n    const dataBins = [];\n    const numBins = Math.ceil(N / this.binSize);\n    for (let i = 1; i <= numBins; i++) {\n      let pivotIdx = i * this.binSize - 1;\n      if (pivotIdx >= N) {\n        pivotIdx = N - 1;\n      }\n      const pivot = sortedKeys[pivotIdx];\n      pivots.push(pivot);\n\n      const bin = {};\n      const binStartIdx = (i - 1) * this.binSize;\n      for (let j = binStartIdx; j <= pivotIdx; j++) {\n        const key = sortedKeys[j];\n        const value = this.keyValueMap[key];\n        bin[key] = value;\n      }\n      dataBins.push(bin);\n    }\n\n    // upload binned data\n    function sleep(ms) {\n      return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n    const binIPFSHashes = [];\n    for (const value of dataBins) {\n      const hash = await this.ipfsHelper.uploadObjectToIPFS(value);\n      this.updateProgress(1 / numBins);\n      binIPFSHashes.push(hash);\n      await sleep(this.uploadDelayMs);\n    }\n\n    // construct root file\n    const rootFile: IPFSRoot = {\n      metadata: this.metadata,\n      pivots,\n      bins: binIPFSHashes,\n      keys: sortedKeys,\n    };\n\n    // upload root file\n    const rootHash = await this.ipfsHelper.uploadObjectToIPFS(rootFile);\n    return rootHash;\n  }\n}\n","import MerkleTree from './merkle-tree'\nimport { BigNumber, utils } from 'ethers'\n\nexport default class BalanceTree {\n  private readonly tree: MerkleTree\n  constructor(balances: { account: string; amount: BigNumber }[]) {\n    this.tree = new MerkleTree(\n      balances.map(({ account, amount }, index) => {\n        return BalanceTree.toNode(index, account, amount)\n      })\n    )\n  }\n\n  public static verifyProof(\n    index: number | BigNumber,\n    account: string,\n    amount: BigNumber,\n    proof: Buffer[],\n    root: Buffer\n  ): boolean {\n    let pair = BalanceTree.toNode(index, account, amount)\n    for (const item of proof) {\n      pair = MerkleTree.combinedHash(pair, item)\n    }\n\n    return pair.equals(root)\n  }\n\n  // keccak256(abi.encode(index, account, amount))\n  public static toNode(index: number | BigNumber, account: string, amount: BigNumber): Buffer {\n    return Buffer.from(\n      utils.solidityKeccak256(['uint256', 'address', 'uint256'], [index, account, amount]).substr(2),\n      'hex'\n    )\n  }\n\n  public getHexRoot(): string {\n    return this.tree.getHexRoot()\n  }\n\n  // returns the hex bytes32 values of the proof\n  public getProof(index: number | BigNumber, account: string, amount: BigNumber): string[] {\n    return this.tree.getHexProof(BalanceTree.toNode(index, account, amount))\n  }\n}","import { BigNumber } from 'bignumber.js';\nimport { IPFSRoot, Metadata } from './interfaces';\nimport { IPFSHelper } from './ipfs-helper';\n\n// Used for searching a remote tree\nexport class RemoteIPFSSearchTree {\n  ipfsHelper: IPFSHelper;\n  rootIPFSHash: string;\n  rootFile: IPFSRoot;\n\n  constructor(ipfsEndpoint: string, rootIPFSHash: string) {\n    this.ipfsHelper = new IPFSHelper(ipfsEndpoint);\n    this.rootIPFSHash = rootIPFSHash;\n  }\n\n  async init() {\n    this.rootFile = await this.ipfsHelper.getObjectFromIPFS(this.rootIPFSHash);\n  }\n\n  async find(key: string): Promise<any> {\n    // linear search to find pivot\n    for (let i = 0; i < this.rootFile.pivots.length; i++) {\n      const pivot = this.rootFile.pivots[i];\n      const pivotNum = new BigNumber(pivot.substr(2).toLowerCase(), 16);\n      const keyNum = new BigNumber(key.substr(2).toLowerCase(), 16);\n      if (keyNum.lte(pivotNum)) {\n        // found pivot, fetch bin\n        const bin = await this.ipfsHelper.getObjectFromIPFS(this.rootFile.bins[i]);\n\n        // find value in bin\n        return bin[key];\n      }\n    }\n    return null;\n  }\n\n  get metadata(): Metadata {\n    return this.rootFile.metadata;\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClaimComponent } from './claim/claim.component';\nimport { CreateComponent } from './create/create.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: HomeComponent\n  },\n  {\n    path: 'create',\n    component: CreateComponent\n  },\n  {\n    path: 'claim/:rootIPFSHash',\n    component: ClaimComponent\n  },\n  {\n    path: 'profile/:userAddress',\n    component: ProfileComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<app-header></app-header>\n<router-outlet></router-outlet>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}