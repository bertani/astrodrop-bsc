{"version":3,"sources":["./node_modules/bnc-onboard/dist/esm/connect-a46c1661.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAA4E,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,4CAA4C,EAAE;;AAEvQ,gCAAgC,qBAAqB,mCAAmC,gDAAgD,gCAAgC,wBAAwB,wEAAwE,EAAE,uBAAuB,uEAAuE,EAAE,kBAAkB,EAAE,EAAE,GAAG;;AAE9V;AACoB;AACnC;AACL;AACD;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;;AAEf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAW;AACzC;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;;AAEe,sEAAO,E","file":"connect-a46c1661-js.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'regenerator-runtime/runtime';\nimport { e as connectIcon } from './onboard-4399156e.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\n\nfunction connect() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var heading = options.heading,\n      description = options.description,\n      icon = options.icon,\n      html = options.html,\n      button = options.button;\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(stateAndHelpers) {\n      var wallet, address, stateSyncStatus, stateStore;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              wallet = stateAndHelpers.wallet, address = stateAndHelpers.address, stateSyncStatus = stateAndHelpers.stateSyncStatus, stateStore = stateAndHelpers.stateStore;\n\n              if (!(address === null)) {\n                _context.next = 5;\n                break;\n              }\n\n              if (!stateSyncStatus.address) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 5;\n              return new Promise(function (resolve) {\n                stateSyncStatus.address && stateSyncStatus.address.then(resolve);\n                setTimeout(function () {\n                  if (address === null) {\n                    // if prom isn't resolving after 500ms, then stop waiting\n                    resolve(undefined);\n                  }\n                }, 500);\n              });\n\n            case 5:\n              if (!(!stateStore.address.get() && wallet && wallet.name)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", {\n                heading: heading || 'Login and Authorize Your Wallet',\n                description: description || \"This dapp requires access to your wallet, please login and authorize access to your \".concat(wallet.name, \" accounts to continue.\"),\n                eventCode: 'loginFail',\n                action: wallet.connect,\n                icon: icon || connectIcon,\n                html: html,\n                button: button\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\n\nexport default connect;"],"sourceRoot":"webpack:///"}